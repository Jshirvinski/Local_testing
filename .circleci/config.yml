# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.4

executors:
  ruby-postgres:
    environment:
      TZ: America/Los_Angeles
    resource_class: medium
    docker:
      - image: cimg/ruby:3.1.2
        environment:
          PGHOST: 127.0.0.1
          PGUSER: docker
          POSTGRES_PORT: 5432
          DATABASE_URL: postgresql://docker:docker@127.0.0.1:5432/db
      - image: cimg/postgres:13.6
        environment:
          POSTGRES_USER: docker
          POSTGRES_DB: db
          POSTGRES_PASSWORD: docker

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
          
      - run:
          name: Get pg_dump from S3
          command: |
            BUCKET=s3://s3-postgres-sql-backup
            OBJECT="$(aws s3 ls $BUCKET --recursive | sort | tail -n 1 | awk '{print $4}')"
            aws s3 cp $BUCKET/$OBJECT staging.dump 

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
